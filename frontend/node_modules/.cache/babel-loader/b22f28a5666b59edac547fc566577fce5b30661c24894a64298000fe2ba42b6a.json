{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USUARIO\\\\Desktop\\\\Nova\\\\chtgpt\\\\Momentum\\\\frontend\\\\src\\\\pages\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport HabitCard from '../components/HabitCard';\nimport Rewards from '../components/Rewards';\nimport VirtualPet from '../components/VirtualPet';\nimport ProgressTree from '../components/ProgressTree'; // Asegúrate de importar esto correctamente\nimport { getHabits, createHabit } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = ({\n  token\n}) => {\n  _s();\n  const [habits, setHabits] = useState([]);\n  const [points, setPoints] = useState(0);\n  const [petHealth, setPetHealth] = useState(100);\n  const fetchHabits = async () => {\n    try {\n      const habitsData = await getHabits(token);\n      setHabits(habitsData);\n    } catch (error) {\n      console.error('Error al obtener los hábitos:', error);\n      alert('Hubo un problema obteniendo los hábitos.');\n    }\n  };\n  useEffect(() => {\n    if (token) {\n      fetchHabits();\n    }\n  }, [token]);\n  const handleCreateHabit = async () => {\n    try {\n      const newHabit = {\n        name: 'Nuevo hábito',\n        description: 'Descripción del hábito'\n      };\n      await createHabit(newHabit, token);\n      fetchHabits();\n    } catch (error) {\n      console.error('Error al crear el hábito:', error);\n      alert('Hubo un problema creando el hábito.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page-content\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Bienvenido a Tu App de H\\xE1bitos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Rewards, {\n      points: points,\n      onRedeem: () => setPoints(points - 100)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(VirtualPet, {\n      petHealth: petHealth\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleCreateHabit,\n      className: \"neomorph-button\",\n      children: \"Crear H\\xE1bito\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: habits.map(habit => /*#__PURE__*/_jsxDEV(HabitCard, {\n        habit: habit,\n        token: token,\n        onHabitUpdated: fetchHabits\n      }, habit._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n_s(Home, \"GCXJJk2IiwiPpQt22BpM7u/bR20=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useState","HabitCard","Rewards","VirtualPet","ProgressTree","getHabits","createHabit","jsxDEV","_jsxDEV","Home","token","_s","habits","setHabits","points","setPoints","petHealth","setPetHealth","fetchHabits","habitsData","error","console","alert","handleCreateHabit","newHabit","name","description","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onRedeem","onClick","map","habit","onHabitUpdated","_id","_c","$RefreshReg$"],"sources":["C:/Users/USUARIO/Desktop/Nova/chtgpt/Momentum/frontend/src/pages/Home.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport HabitCard from '../components/HabitCard';\r\nimport Rewards from '../components/Rewards';\r\nimport VirtualPet from '../components/VirtualPet';\r\nimport ProgressTree from '../components/ProgressTree'; // Asegúrate de importar esto correctamente\r\nimport { getHabits, createHabit } from '../services/api';\r\n\r\nconst Home = ({ token }) => {\r\n    const [habits, setHabits] = useState([]);\r\n    const [points, setPoints] = useState(0);\r\n    const [petHealth, setPetHealth] = useState(100);\r\n\r\n    const fetchHabits = async () => {\r\n        try {\r\n            const habitsData = await getHabits(token);\r\n            setHabits(habitsData);\r\n        } catch (error) {\r\n            console.error('Error al obtener los hábitos:', error);\r\n            alert('Hubo un problema obteniendo los hábitos.');\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (token) {\r\n            fetchHabits();\r\n        }\r\n    }, [token]);\r\n\r\n    const handleCreateHabit = async () => {\r\n        try {\r\n            const newHabit = { name: 'Nuevo hábito', description: 'Descripción del hábito' };\r\n            await createHabit(newHabit, token);\r\n            fetchHabits();\r\n        } catch (error) {\r\n            console.error('Error al crear el hábito:', error);\r\n            alert('Hubo un problema creando el hábito.');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"page-content\">\r\n            <h1>Bienvenido a Tu App de Hábitos</h1>\r\n            <Rewards points={points} onRedeem={() => setPoints(points - 100)} />\r\n            <VirtualPet petHealth={petHealth} />\r\n            <button onClick={handleCreateHabit} className=\"neomorph-button\">Crear Hábito</button>\r\n            <div>\r\n                {habits.map(habit => (\r\n                    <HabitCard\r\n                        key={habit._id}\r\n                        habit={habit}\r\n                        token={token}\r\n                        onHabitUpdated={fetchHabits}\r\n                    />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}