{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USUARIO\\\\Desktop\\\\Nova\\\\chtgpt\\\\Momentum\\\\frontend\\\\src\\\\components\\\\HabitCard.js\";\nimport React from 'react';\nimport { updateHabitWorld } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HabitCard = ({\n  habit,\n  token,\n  onHabitUpdated\n}) => {\n  const handleUpdateWorld = async () => {\n    try {\n      const updatedData = {\n        world: habit.world\n      };\n      await updateHabitWorld(habit._id, updatedData, token);\n      onHabitUpdated();\n    } catch (error) {\n      console.error('Error al actualizar el mundo del hábito:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"habit-card\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: habit.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpdateWorld,\n      children: \"Actualizar Mundo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n};\n_c = HabitCard;\nexport default HabitCard;\nvar _c;\n$RefreshReg$(_c, \"HabitCard\");","map":{"version":3,"names":["React","updateHabitWorld","jsxDEV","_jsxDEV","HabitCard","habit","token","onHabitUpdated","handleUpdateWorld","updatedData","world","_id","error","console","className","children","name","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/USUARIO/Desktop/Nova/chtgpt/Momentum/frontend/src/components/HabitCard.js"],"sourcesContent":["import React from 'react';\r\nimport { updateHabitWorld } from '../services/api';\r\n\r\nconst HabitCard = ({ habit, token, onHabitUpdated }) => {\r\n    const handleUpdateWorld = async () => {\r\n        try {\r\n            const updatedData = { world: habit.world };\r\n            await updateHabitWorld(habit._id, updatedData, token);\r\n            onHabitUpdated();\r\n        } catch (error) {\r\n            console.error('Error al actualizar el mundo del hábito:', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"habit-card\">\r\n            <h3>{habit.name}</h3>\r\n            <button onClick={handleUpdateWorld}>Actualizar Mundo</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default HabitCard;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,gBAAgB,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,SAAS,GAAGA,CAAC;EAAEC,KAAK;EAAEC,KAAK;EAAEC;AAAe,CAAC,KAAK;EACpD,MAAMC,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IAClC,IAAI;MACA,MAAMC,WAAW,GAAG;QAAEC,KAAK,EAAEL,KAAK,CAACK;MAAM,CAAC;MAC1C,MAAMT,gBAAgB,CAACI,KAAK,CAACM,GAAG,EAAEF,WAAW,EAAEH,KAAK,CAAC;MACrDC,cAAc,CAAC,CAAC;IACpB,CAAC,CAAC,OAAOK,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,0CAA0C,EAAEA,KAAK,CAAC;IACpE;EACJ,CAAC;EAED,oBACIT,OAAA;IAAKW,SAAS,EAAC,YAAY;IAAAC,QAAA,gBACvBZ,OAAA;MAAAY,QAAA,EAAKV,KAAK,CAACW;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACrBjB,OAAA;MAAQkB,OAAO,EAAEb,iBAAkB;MAAAO,QAAA,EAAC;IAAgB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5D,CAAC;AAEd,CAAC;AAACE,EAAA,GAjBIlB,SAAS;AAmBf,eAAeA,SAAS;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}