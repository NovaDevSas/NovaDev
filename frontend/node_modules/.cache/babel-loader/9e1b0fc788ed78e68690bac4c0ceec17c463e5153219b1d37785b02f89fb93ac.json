{"ast":null,"code":"import axios from 'axios';\n\n// URL base para tu API\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\n\n// Registrar usuario\nexport const registerUser = async userData => {\n  try {\n    const response = await axios.post(`${API_URL}/users/register`, userData);\n    return response.data;\n  } catch (error) {\n    console.error('Error al registrar el usuario:', error);\n    throw error.response.data;\n  }\n};\n\n// Iniciar sesión\nexport const loginUser = async credentials => {\n  try {\n    const response = await axios.post(`${API_URL}/users/login`, credentials);\n    return response.data;\n  } catch (error) {\n    console.error('Error al iniciar sesión:', error);\n    throw error.response.data;\n  }\n};\n\n// Obtener hábitos\nexport const getHabits = async token => {\n  try {\n    const response = await axios.get(`${API_URL}/habits`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error al obtener hábitos:', error);\n    throw error.response.data;\n  }\n};\n\n// Crear hábito\nexport const createHabit = async (habitData, token) => {\n  try {\n    const response = await axios.post(`${API_URL}/habits`, habitData, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error al crear el hábito:', error);\n    throw error.response.data;\n  }\n};\n\n// Completar hábito\nexport const completeHabit = async (id, token) => {\n  try {\n    const response = await axios.put(`${API_URL}/habits/${id}/complete`, null, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error al completar el hábito:', error);\n    throw error.response.data;\n  }\n};\n\n// Actualizar el mundo del hábito\nexport const updateHabitWorld = async (habitId, updatedData, token) => {\n  try {\n    const response = await axios.put(`${API_URL}/habits/${habitId}`, updatedData, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return response.data;\n  } catch (error) {\n    var _error$response;\n    console.error('Error al actualizar el mundo del hábito:', error);\n    throw ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message;\n  }\n};","map":{"version":3,"names":["axios","API_URL","process","env","REACT_APP_API_URL","registerUser","userData","response","post","data","error","console","loginUser","credentials","getHabits","token","get","headers","Authorization","createHabit","habitData","completeHabit","id","put","updateHabitWorld","habitId","updatedData","_error$response","message"],"sources":["C:/Users/novad/Escritorio/Proyectos/Nova/NovaDev/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n// URL base para tu API\r\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\r\n\r\n// Registrar usuario\r\nexport const registerUser = async (userData) => {\r\n    try {\r\n        const response = await axios.post(`${API_URL}/users/register`, userData);\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Error al registrar el usuario:', error);\r\n        throw error.response.data;\r\n    }\r\n};\r\n\r\n// Iniciar sesión\r\nexport const loginUser = async (credentials) => {\r\n    try {\r\n        const response = await axios.post(`${API_URL}/users/login`, credentials);\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Error al iniciar sesión:', error);\r\n        throw error.response.data;\r\n    }\r\n};\r\n\r\n// Obtener hábitos\r\nexport const getHabits = async (token) => {\r\n    try {\r\n        const response = await axios.get(`${API_URL}/habits`, {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n        });\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Error al obtener hábitos:', error);\r\n        throw error.response.data;\r\n    }\r\n};\r\n\r\n// Crear hábito\r\nexport const createHabit = async (habitData, token) => {\r\n    try {\r\n        const response = await axios.post(`${API_URL}/habits`, habitData, {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n        });\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Error al crear el hábito:', error);\r\n        throw error.response.data;\r\n    }\r\n};\r\n\r\n// Completar hábito\r\nexport const completeHabit = async (id, token) => {\r\n    try {\r\n        const response = await axios.put(`${API_URL}/habits/${id}/complete`, null, {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n        });\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Error al completar el hábito:', error);\r\n        throw error.response.data;\r\n    }\r\n};\r\n\r\n// Actualizar el mundo del hábito\r\nexport const updateHabitWorld = async (habitId, updatedData, token) => {\r\n    try {\r\n        const response = await axios.put(\r\n            `${API_URL}/habits/${habitId}`,\r\n            updatedData,\r\n            {\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`,\r\n                },\r\n            }\r\n        );\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Error al actualizar el mundo del hábito:', error);\r\n        throw error.response?.data || error.message;\r\n    }\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,2BAA2B;;AAE5E;AACA,OAAO,MAAMC,YAAY,GAAG,MAAOC,QAAQ,IAAK;EAC5C,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMP,KAAK,CAACQ,IAAI,CAAC,GAAGP,OAAO,iBAAiB,EAAEK,QAAQ,CAAC;IACxE,OAAOC,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;IACtD,MAAMA,KAAK,CAACH,QAAQ,CAACE,IAAI;EAC7B;AACJ,CAAC;;AAED;AACA,OAAO,MAAMG,SAAS,GAAG,MAAOC,WAAW,IAAK;EAC5C,IAAI;IACA,MAAMN,QAAQ,GAAG,MAAMP,KAAK,CAACQ,IAAI,CAAC,GAAGP,OAAO,cAAc,EAAEY,WAAW,CAAC;IACxE,OAAON,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAChD,MAAMA,KAAK,CAACH,QAAQ,CAACE,IAAI;EAC7B;AACJ,CAAC;;AAED;AACA,OAAO,MAAMK,SAAS,GAAG,MAAOC,KAAK,IAAK;EACtC,IAAI;IACA,MAAMR,QAAQ,GAAG,MAAMP,KAAK,CAACgB,GAAG,CAAC,GAAGf,OAAO,SAAS,EAAE;MAClDgB,OAAO,EAAE;QAAEC,aAAa,EAAE,UAAUH,KAAK;MAAG;IAChD,CAAC,CAAC;IACF,OAAOR,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACjD,MAAMA,KAAK,CAACH,QAAQ,CAACE,IAAI;EAC7B;AACJ,CAAC;;AAED;AACA,OAAO,MAAMU,WAAW,GAAG,MAAAA,CAAOC,SAAS,EAAEL,KAAK,KAAK;EACnD,IAAI;IACA,MAAMR,QAAQ,GAAG,MAAMP,KAAK,CAACQ,IAAI,CAAC,GAAGP,OAAO,SAAS,EAAEmB,SAAS,EAAE;MAC9DH,OAAO,EAAE;QAAEC,aAAa,EAAE,UAAUH,KAAK;MAAG;IAChD,CAAC,CAAC;IACF,OAAOR,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACjD,MAAMA,KAAK,CAACH,QAAQ,CAACE,IAAI;EAC7B;AACJ,CAAC;;AAED;AACA,OAAO,MAAMY,aAAa,GAAG,MAAAA,CAAOC,EAAE,EAAEP,KAAK,KAAK;EAC9C,IAAI;IACA,MAAMR,QAAQ,GAAG,MAAMP,KAAK,CAACuB,GAAG,CAAC,GAAGtB,OAAO,WAAWqB,EAAE,WAAW,EAAE,IAAI,EAAE;MACvEL,OAAO,EAAE;QAAEC,aAAa,EAAE,UAAUH,KAAK;MAAG;IAChD,CAAC,CAAC;IACF,OAAOR,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;IACrD,MAAMA,KAAK,CAACH,QAAQ,CAACE,IAAI;EAC7B;AACJ,CAAC;;AAED;AACA,OAAO,MAAMe,gBAAgB,GAAG,MAAAA,CAAOC,OAAO,EAAEC,WAAW,EAAEX,KAAK,KAAK;EACnE,IAAI;IACA,MAAMR,QAAQ,GAAG,MAAMP,KAAK,CAACuB,GAAG,CAC5B,GAAGtB,OAAO,WAAWwB,OAAO,EAAE,EAC9BC,WAAW,EACX;MACIT,OAAO,EAAE;QACLC,aAAa,EAAE,UAAUH,KAAK;MAClC;IACJ,CACJ,CAAC;IACD,OAAOR,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IAAA,IAAAiB,eAAA;IACZhB,OAAO,CAACD,KAAK,CAAC,0CAA0C,EAAEA,KAAK,CAAC;IAChE,MAAM,EAAAiB,eAAA,GAAAjB,KAAK,CAACH,QAAQ,cAAAoB,eAAA,uBAAdA,eAAA,CAAgBlB,IAAI,KAAIC,KAAK,CAACkB,OAAO;EAC/C;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}