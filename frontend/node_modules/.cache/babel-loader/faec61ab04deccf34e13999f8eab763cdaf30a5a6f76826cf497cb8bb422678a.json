{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USUARIO\\\\Desktop\\\\Nova\\\\chtgpt\\\\Momentum\\\\frontend\\\\src\\\\pages\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport HabitCard from '../components/HabitCard';\nimport { getHabits, completeHabit } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [habits, setHabits] = useState([]);\n  const token = localStorage.getItem('token'); // Asume que el token se guarda al iniciar sesión\n\n  useEffect(() => {\n    const fetchHabits = async () => {\n      if (token) {\n        const data = await getHabits(token);\n        setHabits(data);\n      }\n    };\n    fetchHabits();\n  }, [token]);\n  const handleComplete = async id => {\n    await completeHabit(id, token);\n    setHabits(habits.map(habit => habit._id === id ? {\n      ...habit,\n      completed: true\n    } : habit));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Your Habits\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: habits.length > 0 ? habits.map(habit => /*#__PURE__*/_jsxDEV(HabitCard, {\n        habit: habit,\n        onComplete: handleComplete\n      }, habit._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 25\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No habits to show. Start by adding some!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n_s(Home, \"gIacv8FFx8NWfH/T9k0vnBCdA0k=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useState","HabitCard","getHabits","completeHabit","jsxDEV","_jsxDEV","Home","_s","habits","setHabits","token","localStorage","getItem","fetchHabits","data","handleComplete","id","map","habit","_id","completed","children","fileName","_jsxFileName","lineNumber","columnNumber","length","onComplete","_c","$RefreshReg$"],"sources":["C:/Users/USUARIO/Desktop/Nova/chtgpt/Momentum/frontend/src/pages/Home.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport HabitCard from '../components/HabitCard';\r\nimport { getHabits, completeHabit } from '../services/api';\r\n\r\nconst Home = () => {\r\n    const [habits, setHabits] = useState([]);\r\n    const token = localStorage.getItem('token'); // Asume que el token se guarda al iniciar sesión\r\n\r\n    useEffect(() => {\r\n        const fetchHabits = async () => {\r\n            if (token) {\r\n                const data = await getHabits(token);\r\n                setHabits(data);\r\n            }\r\n        };\r\n        fetchHabits();\r\n    }, [token]);\r\n\r\n    const handleComplete = async (id) => {\r\n        await completeHabit(id, token);\r\n        setHabits(habits.map(habit => habit._id === id ? { ...habit, completed: true } : habit));\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>Your Habits</h1>\r\n            <div>\r\n                {habits.length > 0 ? (\r\n                    habits.map(habit => (\r\n                        <HabitCard key={habit._id} habit={habit} onComplete={handleComplete} />\r\n                    ))\r\n                ) : (\r\n                    <p>No habits to show. Start by adding some!</p>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,SAASC,SAAS,EAAEC,aAAa,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACf,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAMU,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;;EAE7Cb,SAAS,CAAC,MAAM;IACZ,MAAMc,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAIH,KAAK,EAAE;QACP,MAAMI,IAAI,GAAG,MAAMZ,SAAS,CAACQ,KAAK,CAAC;QACnCD,SAAS,CAACK,IAAI,CAAC;MACnB;IACJ,CAAC;IACDD,WAAW,CAAC,CAAC;EACjB,CAAC,EAAE,CAACH,KAAK,CAAC,CAAC;EAEX,MAAMK,cAAc,GAAG,MAAOC,EAAE,IAAK;IACjC,MAAMb,aAAa,CAACa,EAAE,EAAEN,KAAK,CAAC;IAC9BD,SAAS,CAACD,MAAM,CAACS,GAAG,CAACC,KAAK,IAAIA,KAAK,CAACC,GAAG,KAAKH,EAAE,GAAG;MAAE,GAAGE,KAAK;MAAEE,SAAS,EAAE;IAAK,CAAC,GAAGF,KAAK,CAAC,CAAC;EAC5F,CAAC;EAED,oBACIb,OAAA;IAAAgB,QAAA,gBACIhB,OAAA;MAAAgB,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpBpB,OAAA;MAAAgB,QAAA,EACKb,MAAM,CAACkB,MAAM,GAAG,CAAC,GACdlB,MAAM,CAACS,GAAG,CAACC,KAAK,iBACZb,OAAA,CAACJ,SAAS;QAAiBiB,KAAK,EAAEA,KAAM;QAACS,UAAU,EAAEZ;MAAe,GAApDG,KAAK,CAACC,GAAG;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAA6C,CACzE,CAAC,gBAEFpB,OAAA;QAAAgB,QAAA,EAAG;MAAwC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IACjD;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAAClB,EAAA,CAjCID,IAAI;AAAAsB,EAAA,GAAJtB,IAAI;AAmCV,eAAeA,IAAI;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}