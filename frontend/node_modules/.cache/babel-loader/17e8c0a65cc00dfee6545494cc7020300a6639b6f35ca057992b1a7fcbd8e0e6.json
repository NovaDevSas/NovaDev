{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USUARIO\\\\Desktop\\\\Nova\\\\chtgpt\\\\Momentum\\\\frontend\\\\src\\\\pages\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport HabitCard from '../components/HabitCard';\nimport ProgressTree from '../components/ProgressTree';\nimport { getHabits, createHabit } from '../services/api';\nimport BaseLayout from '../components/BaseLayout';\nimport Navbar from '../components/Navbar';\nimport '../styles/mobile.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [habits, setHabits] = useState([]);\n  const [habitName, setHabitName] = useState('');\n  const token = localStorage.getItem('token');\n  useEffect(() => {\n    const fetchHabits = async () => {\n      if (token) {\n        try {\n          const data = await getHabits(token);\n          setHabits(data);\n        } catch (error) {\n          console.error('Error al obtener los hábitos:', error);\n        }\n      }\n    };\n    fetchHabits();\n  }, [token]);\n  const handleCreateHabit = async () => {\n    if (habitName.trim()) {\n      try {\n        const habit = {\n          name: habitName,\n          world: 'forest',\n          frequency: 3\n        }; // Añadir más datos según sea necesario\n        const newHabit = await createHabit(habit, token);\n        setHabitName('');\n        setHabits([...habits, newHabit]);\n      } catch (error) {\n        console.error('Error al crear el hábito:', error);\n        alert('Hubo un problema creando el hábito.');\n      }\n    } else {\n      alert('Por favor ingrese un nombre para el hábito');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(BaseLayout, {\n      title: \"Bienvenido a Tu App de H\\xE1bitos\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"neomorph-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"neomorph-input\",\n          value: habitName,\n          onChange: e => setHabitName(e.target.value),\n          placeholder: \"Nombre del h\\xE1bito\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleCreateHabit,\n          className: \"neomorph-button\",\n          children: \"Crear H\\xE1bito\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ProgressTree, {\n        habits: habits\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: habits.map(habit => /*#__PURE__*/_jsxDEV(HabitCard, {\n          habit: habit\n        }, habit._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(Home, \"lI8OJ4zbZ7dyEQXTl0Td13OvThI=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useState","HabitCard","ProgressTree","getHabits","createHabit","BaseLayout","Navbar","jsxDEV","_jsxDEV","Fragment","_Fragment","Home","_s","habits","setHabits","habitName","setHabitName","token","localStorage","getItem","fetchHabits","data","error","console","handleCreateHabit","trim","habit","name","world","frequency","newHabit","alert","children","title","className","type","value","onChange","e","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","_id","_c","$RefreshReg$"],"sources":["C:/Users/USUARIO/Desktop/Nova/chtgpt/Momentum/frontend/src/pages/Home.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport HabitCard from '../components/HabitCard';\r\nimport ProgressTree from '../components/ProgressTree';\r\nimport { getHabits, createHabit } from '../services/api';\r\nimport BaseLayout from '../components/BaseLayout';\r\nimport Navbar from '../components/Navbar';\r\nimport '../styles/mobile.css';\r\n\r\nconst Home = () => {\r\n    const [habits, setHabits] = useState([]);\r\n    const [habitName, setHabitName] = useState('');\r\n\r\n    const token = localStorage.getItem('token');\r\n\r\n    useEffect(() => {\r\n        const fetchHabits = async () => {\r\n            if (token) {\r\n                try {\r\n                    const data = await getHabits(token);\r\n                    setHabits(data);\r\n                } catch (error) {\r\n                    console.error('Error al obtener los hábitos:', error);\r\n                }\r\n            }\r\n        };\r\n        fetchHabits();\r\n    }, [token]);\r\n\r\n    const handleCreateHabit = async () => {\r\n        if (habitName.trim()) {\r\n            try {\r\n                const habit = { name: habitName, world: 'forest', frequency: 3 }; // Añadir más datos según sea necesario\r\n                const newHabit = await createHabit(habit, token);\r\n                setHabitName('');\r\n                setHabits([...habits, newHabit]);\r\n            } catch (error) {\r\n                console.error('Error al crear el hábito:', error);\r\n                alert('Hubo un problema creando el hábito.');\r\n            }\r\n        } else {\r\n            alert('Por favor ingrese un nombre para el hábito');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <BaseLayout title=\"Bienvenido a Tu App de Hábitos\">\r\n                {/* Formulario para crear un hábito */}\r\n                <div className=\"neomorph-form\">\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"neomorph-input\"\r\n                        value={habitName}\r\n                        onChange={(e) => setHabitName(e.target.value)}\r\n                        placeholder=\"Nombre del hábito\"\r\n                    />\r\n                    <button onClick={handleCreateHabit} className=\"neomorph-button\">\r\n                        Crear Hábito\r\n                    </button>\r\n                </div>\r\n\r\n                {/* Visualización del árbol de progreso */}\r\n                <ProgressTree habits={habits} />\r\n\r\n                {/* Lista de hábitos */}\r\n                <div>\r\n                    {habits.map((habit) => (\r\n                        <HabitCard key={habit._id} habit={habit} />\r\n                    ))}\r\n                </div>\r\n            </BaseLayout>\r\n            <Navbar />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,YAAY,MAAM,4BAA4B;AACrD,SAASC,SAAS,EAAEC,WAAW,QAAQ,iBAAiB;AACxD,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAO,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE9B,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACf,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACe,SAAS,EAAEC,YAAY,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAE9C,MAAMiB,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAE3CpB,SAAS,CAAC,MAAM;IACZ,MAAMqB,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAIH,KAAK,EAAE;QACP,IAAI;UACA,MAAMI,IAAI,GAAG,MAAMlB,SAAS,CAACc,KAAK,CAAC;UACnCH,SAAS,CAACO,IAAI,CAAC;QACnB,CAAC,CAAC,OAAOC,KAAK,EAAE;UACZC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;QACzD;MACJ;IACJ,CAAC;IACDF,WAAW,CAAC,CAAC;EACjB,CAAC,EAAE,CAACH,KAAK,CAAC,CAAC;EAEX,MAAMO,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IAClC,IAAIT,SAAS,CAACU,IAAI,CAAC,CAAC,EAAE;MAClB,IAAI;QACA,MAAMC,KAAK,GAAG;UAAEC,IAAI,EAAEZ,SAAS;UAAEa,KAAK,EAAE,QAAQ;UAAEC,SAAS,EAAE;QAAE,CAAC,CAAC,CAAC;QAClE,MAAMC,QAAQ,GAAG,MAAM1B,WAAW,CAACsB,KAAK,EAAET,KAAK,CAAC;QAChDD,YAAY,CAAC,EAAE,CAAC;QAChBF,SAAS,CAAC,CAAC,GAAGD,MAAM,EAAEiB,QAAQ,CAAC,CAAC;MACpC,CAAC,CAAC,OAAOR,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;QACjDS,KAAK,CAAC,qCAAqC,CAAC;MAChD;IACJ,CAAC,MAAM;MACHA,KAAK,CAAC,4CAA4C,CAAC;IACvD;EACJ,CAAC;EAED,oBACIvB,OAAA,CAAAE,SAAA;IAAAsB,QAAA,gBACIxB,OAAA,CAACH,UAAU;MAAC4B,KAAK,EAAC,mCAAgC;MAAAD,QAAA,gBAE9CxB,OAAA;QAAK0B,SAAS,EAAC,eAAe;QAAAF,QAAA,gBAC1BxB,OAAA;UACI2B,IAAI,EAAC,MAAM;UACXD,SAAS,EAAC,gBAAgB;UAC1BE,KAAK,EAAErB,SAAU;UACjBsB,QAAQ,EAAGC,CAAC,IAAKtB,YAAY,CAACsB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;UAC9CI,WAAW,EAAC;QAAmB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClC,CAAC,eACFpC,OAAA;UAAQqC,OAAO,EAAErB,iBAAkB;UAACU,SAAS,EAAC,iBAAiB;UAAAF,QAAA,EAAC;QAEhE;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR,CAAC,eAGNpC,OAAA,CAACN,YAAY;QAACW,MAAM,EAAEA;MAAO;QAAA4B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAGhCpC,OAAA;QAAAwB,QAAA,EACKnB,MAAM,CAACiC,GAAG,CAAEpB,KAAK,iBACdlB,OAAA,CAACP,SAAS;UAAiByB,KAAK,EAAEA;QAAM,GAAxBA,KAAK,CAACqB,GAAG;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAiB,CAC7C;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,eACbpC,OAAA,CAACF,MAAM;MAAAmC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA,eACZ,CAAC;AAEX,CAAC;AAAChC,EAAA,CAlEID,IAAI;AAAAqC,EAAA,GAAJrC,IAAI;AAoEV,eAAeA,IAAI;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}