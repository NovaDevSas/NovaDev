{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USUARIO\\\\Desktop\\\\Nova\\\\chtgpt\\\\Momentum\\\\frontend\\\\src\\\\components\\\\ProgressTree.js\";\nimport React from 'react';\nimport seed from '../images/progress/seed.png';\nimport sapling from '../images/progress/sapling.png';\nimport youngTree from '../images/progress/young_tree.png';\nimport tree from '../images/progress/tree.png';\nimport '../styles/mobile.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProgressTree = ({\n  habits\n}) => {\n  const calculateProgress = habit => {\n    // Placeholder calculation for habit progress\n    return habit.progress || 0;\n  };\n  const getTreeImage = progress => {\n    if (progress < 25) {\n      return seed;\n    } else if (progress < 50) {\n      return sapling;\n    } else if (progress < 75) {\n      return youngTree;\n    } else {\n      return tree;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"progress-tree-container\",\n    children: habits.map(habit => {\n      const progress = calculateProgress(habit);\n      const treeImage = getTreeImage(progress);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-tree\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: treeImage,\n          alt: \"Tree progress\",\n          className: \"tree-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: habit.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 25\n        }, this)]\n      }, habit._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n_c = ProgressTree;\nexport default ProgressTree;\nvar _c;\n$RefreshReg$(_c, \"ProgressTree\");","map":{"version":3,"names":["React","seed","sapling","youngTree","tree","jsxDEV","_jsxDEV","ProgressTree","habits","calculateProgress","habit","progress","getTreeImage","className","children","map","treeImage","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","name","_id","_c","$RefreshReg$"],"sources":["C:/Users/USUARIO/Desktop/Nova/chtgpt/Momentum/frontend/src/components/ProgressTree.js"],"sourcesContent":["import React from 'react';\r\nimport seed from '../images/progress/seed.png';\r\nimport sapling from '../images/progress/sapling.png';\r\nimport youngTree from '../images/progress/young_tree.png';\r\nimport tree from '../images/progress/tree.png';\r\nimport '../styles/mobile.css';\r\n\r\nconst ProgressTree = ({ habits }) => {\r\n    const calculateProgress = (habit) => {\r\n        // Placeholder calculation for habit progress\r\n        return habit.progress || 0;\r\n    };\r\n\r\n    const getTreeImage = (progress) => {\r\n        if (progress < 25) {\r\n            return seed;\r\n        } else if (progress < 50) {\r\n            return sapling;\r\n        } else if (progress < 75) {\r\n            return youngTree;\r\n        } else {\r\n            return tree;\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"progress-tree-container\">\r\n            {habits.map((habit) => {\r\n                const progress = calculateProgress(habit);\r\n                const treeImage = getTreeImage(progress);\r\n\r\n                return (\r\n                    <div key={habit._id} className=\"progress-tree\">\r\n                        <img src={treeImage} alt=\"Tree progress\" className=\"tree-image\" />\r\n                        <p>{habit.name}</p>\r\n                    </div>\r\n                );\r\n            })}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProgressTree;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,6BAA6B;AAC9C,OAAOC,OAAO,MAAM,gCAAgC;AACpD,OAAOC,SAAS,MAAM,mCAAmC;AACzD,OAAOC,IAAI,MAAM,6BAA6B;AAC9C,OAAO,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAO,CAAC,KAAK;EACjC,MAAMC,iBAAiB,GAAIC,KAAK,IAAK;IACjC;IACA,OAAOA,KAAK,CAACC,QAAQ,IAAI,CAAC;EAC9B,CAAC;EAED,MAAMC,YAAY,GAAID,QAAQ,IAAK;IAC/B,IAAIA,QAAQ,GAAG,EAAE,EAAE;MACf,OAAOV,IAAI;IACf,CAAC,MAAM,IAAIU,QAAQ,GAAG,EAAE,EAAE;MACtB,OAAOT,OAAO;IAClB,CAAC,MAAM,IAAIS,QAAQ,GAAG,EAAE,EAAE;MACtB,OAAOR,SAAS;IACpB,CAAC,MAAM;MACH,OAAOC,IAAI;IACf;EACJ,CAAC;EAED,oBACIE,OAAA;IAAKO,SAAS,EAAC,yBAAyB;IAAAC,QAAA,EACnCN,MAAM,CAACO,GAAG,CAAEL,KAAK,IAAK;MACnB,MAAMC,QAAQ,GAAGF,iBAAiB,CAACC,KAAK,CAAC;MACzC,MAAMM,SAAS,GAAGJ,YAAY,CAACD,QAAQ,CAAC;MAExC,oBACIL,OAAA;QAAqBO,SAAS,EAAC,eAAe;QAAAC,QAAA,gBAC1CR,OAAA;UAAKW,GAAG,EAAED,SAAU;UAACE,GAAG,EAAC,eAAe;UAACL,SAAS,EAAC;QAAY;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAClEhB,OAAA;UAAAQ,QAAA,EAAIJ,KAAK,CAACa;QAAI;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,GAFbZ,KAAK,CAACc,GAAG;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGd,CAAC;IAEd,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd,CAAC;AAACG,EAAA,GAjCIlB,YAAY;AAmClB,eAAeA,YAAY;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}