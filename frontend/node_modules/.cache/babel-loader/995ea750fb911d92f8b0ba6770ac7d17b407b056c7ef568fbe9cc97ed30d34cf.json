{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USUARIO\\\\Desktop\\\\Nova\\\\chtgpt\\\\Momentum\\\\frontend\\\\src\\\\pages\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { loginUser } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const userData = {\n      email,\n      password\n    };\n    try {\n      const data = await loginUser(userData);\n      localStorage.setItem('token', data.token); // Guarda el token en localStorage\n      localStorage.setItem('user', JSON.stringify(data)); // Guarda el usuario en localStorage\n\n      // Redirige a la página principal\n      navigate('/');\n      window.location.reload(); // Recarga la aplicación para actualizar el estado\n    } catch (err) {\n      var _err$response, _err$response$data;\n      const errorMsg = ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Error al iniciar sesión';\n      setError(errorMsg);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"neomorph-card\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Iniciar Sesi\\xF3n\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      placeholder: \"Email\",\n      value: email,\n      onChange: e => setEmail(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"Contrase\\xF1a\",\n      value: password,\n      onChange: e => setPassword(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"neomorph-button\",\n      children: \"Iniciar Sesi\\xF3n\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n_s(Login, \"04s5JR+/x8JdloJ2sm+29L/IvyI=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","loginUser","jsxDEV","_jsxDEV","Login","_s","email","setEmail","password","setPassword","error","setError","navigate","handleSubmit","e","preventDefault","userData","data","localStorage","setItem","token","JSON","stringify","window","location","reload","err","_err$response","_err$response$data","errorMsg","response","message","onSubmit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","type","placeholder","value","onChange","target","required","_c","$RefreshReg$"],"sources":["C:/Users/USUARIO/Desktop/Nova/chtgpt/Momentum/frontend/src/pages/Login.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { loginUser } from '../services/api';\r\n\r\nconst Login = () => {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [error, setError] = useState('');\r\n    const navigate = useNavigate();\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        const userData = { email, password };\r\n\r\n        try {\r\n            const data = await loginUser(userData);\r\n            localStorage.setItem('token', data.token); // Guarda el token en localStorage\r\n            localStorage.setItem('user', JSON.stringify(data)); // Guarda el usuario en localStorage\r\n\r\n            // Redirige a la página principal\r\n            navigate('/');\r\n            window.location.reload(); // Recarga la aplicación para actualizar el estado\r\n        } catch (err) {\r\n            const errorMsg = err.response?.data?.message || 'Error al iniciar sesión';\r\n            setError(errorMsg);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} className=\"neomorph-card\">\r\n            <h2>Iniciar Sesión</h2>\r\n            {error && <p style={{ color: 'red' }}>{error}</p>}\r\n            <input \r\n                type=\"email\" \r\n                placeholder=\"Email\" \r\n                value={email} \r\n                onChange={(e) => setEmail(e.target.value)} \r\n                required \r\n            />\r\n            <input \r\n                type=\"password\" \r\n                placeholder=\"Contraseña\" \r\n                value={password} \r\n                onChange={(e) => setPassword(e.target.value)} \r\n                required \r\n            />\r\n            <button type=\"submit\" className=\"neomorph-button\">Iniciar Sesión</button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}