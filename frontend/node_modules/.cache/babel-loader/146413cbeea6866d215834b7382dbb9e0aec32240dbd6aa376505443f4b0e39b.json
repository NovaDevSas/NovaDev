{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USUARIO\\\\Desktop\\\\Nova\\\\chtgpt\\\\Momentum\\\\frontend\\\\src\\\\pages\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport HabitCard from '../components/HabitCard';\nimport ProgressTree from '../components/ProgressTree';\nimport { getHabits, createHabit } from '../services/api';\nimport '../styles/mobile.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [habits, setHabits] = useState([]);\n  const [habitName, setHabitName] = useState('');\n  const token = localStorage.getItem('token');\n  useEffect(() => {\n    const fetchHabits = async () => {\n      if (token) {\n        const data = await getHabits(token);\n        setHabits(data);\n      }\n    };\n    fetchHabits();\n  }, [token]);\n  const handleCreateHabit = async () => {\n    if (habitName.trim()) {\n      const habit = {\n        name: habitName,\n        world: 'forest',\n        frequency: 3\n      }; // Añadir más datos según sea necesario\n      await createHabit(habit, token);\n      setHabitName('');\n      setHabits([...habits, habit]);\n    } else {\n      alert('Por favor ingrese un nombre para el hábito');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page-content\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Bienvenido a Tu App de H\\xE1bitos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"neomorph-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"neomorph-input\",\n        value: habitName,\n        onChange: e => setHabitName(e.target.value),\n        placeholder: \"Nombre del h\\xE1bito\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCreateHabit,\n        className: \"neomorph-button\",\n        children: \"Crear H\\xE1bito\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ProgressTree, {\n      habits: habits\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: habits.map(habit => /*#__PURE__*/_jsxDEV(HabitCard, {\n        habit: habit\n      }, habit._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n_s(Home, \"lI8OJ4zbZ7dyEQXTl0Td13OvThI=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useState","HabitCard","ProgressTree","getHabits","createHabit","jsxDEV","_jsxDEV","Home","_s","habits","setHabits","habitName","setHabitName","token","localStorage","getItem","fetchHabits","data","handleCreateHabit","trim","habit","name","world","frequency","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","map","_id","_c","$RefreshReg$"],"sources":["C:/Users/USUARIO/Desktop/Nova/chtgpt/Momentum/frontend/src/pages/Home.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport HabitCard from '../components/HabitCard';\r\nimport ProgressTree from '../components/ProgressTree';\r\nimport { getHabits, createHabit } from '../services/api';\r\nimport '../styles/mobile.css';\r\n\r\nconst Home = () => {\r\n    const [habits, setHabits] = useState([]);\r\n    const [habitName, setHabitName] = useState('');\r\n\r\n    const token = localStorage.getItem('token');\r\n\r\n    useEffect(() => {\r\n        const fetchHabits = async () => {\r\n            if (token) {\r\n                const data = await getHabits(token);\r\n                setHabits(data);\r\n            }\r\n        };\r\n        fetchHabits();\r\n    }, [token]);\r\n\r\n    const handleCreateHabit = async () => {\r\n        if (habitName.trim()) {\r\n            const habit = { name: habitName, world: 'forest', frequency: 3 }; // Añadir más datos según sea necesario\r\n            await createHabit(habit, token);\r\n            setHabitName('');\r\n            setHabits([...habits, habit]);\r\n        } else {\r\n            alert('Por favor ingrese un nombre para el hábito');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"page-content\">\r\n            <h1>Bienvenido a Tu App de Hábitos</h1>\r\n\r\n            {/* Formulario para crear un hábito */}\r\n            <div className=\"neomorph-form\">\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"neomorph-input\"\r\n                    value={habitName}\r\n                    onChange={(e) => setHabitName(e.target.value)}\r\n                    placeholder=\"Nombre del hábito\"\r\n                />\r\n                <button onClick={handleCreateHabit} className=\"neomorph-button\">\r\n                    Crear Hábito\r\n                </button>\r\n            </div>\r\n\r\n            {/* Visualización del árbol de progreso */}\r\n            <ProgressTree habits={habits} />\r\n\r\n            {/* Lista de hábitos */}\r\n            <div>\r\n                {habits.map((habit) => (\r\n                    <HabitCard key={habit._id} habit={habit} />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}