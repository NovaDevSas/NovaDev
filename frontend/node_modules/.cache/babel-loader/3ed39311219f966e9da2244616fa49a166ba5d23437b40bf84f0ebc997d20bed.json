{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USUARIO\\\\Desktop\\\\Nova\\\\chtgpt\\\\Momentum\\\\frontend\\\\src\\\\components\\\\ProgressTree.js\";\nimport React from 'react';\nimport seed from '../images/progress/seed.png';\nimport sapling from '../images/progress/sapling.png';\nimport youngTree from '../images/progress/young_tree.png';\nimport tree from '../images/progress/tree.png';\nimport forest from '../images/progress/forest.png'; // Ejemplo de imagen del mundo\nimport '../styles/progressTree.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProgressTree = ({\n  habit\n}) => {\n  const getTreeImage = () => {\n    const progress = habit.progress || 0;\n    if (progress < 25) {\n      return seed;\n    } else if (progress < 50) {\n      return sapling;\n    } else if (progress < 75) {\n      return youngTree;\n    } else {\n      return tree;\n    }\n  };\n  const getWorldImage = () => {\n    switch (habit.world) {\n      case 'forest':\n        return forest;\n      case 'city':\n        return city;\n      // Ejemplo\n      case 'ocean':\n        return ocean;\n      // Ejemplo\n      default:\n        return forest;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"progress-tree\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: getWorldImage(),\n      alt: \"Habit World\",\n      className: \"world-image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: getTreeImage(),\n      alt: \"Tree Progress\",\n      className: \"tree-image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n_c = ProgressTree;\nexport default ProgressTree;\nvar _c;\n$RefreshReg$(_c, \"ProgressTree\");","map":{"version":3,"names":["React","seed","sapling","youngTree","tree","forest","jsxDEV","_jsxDEV","ProgressTree","habit","getTreeImage","progress","getWorldImage","world","city","ocean","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/USUARIO/Desktop/Nova/chtgpt/Momentum/frontend/src/components/ProgressTree.js"],"sourcesContent":["import React from 'react';\r\nimport seed from '../images/progress/seed.png';\r\nimport sapling from '../images/progress/sapling.png';\r\nimport youngTree from '../images/progress/young_tree.png';\r\nimport tree from '../images/progress/tree.png';\r\nimport forest from '../images/progress/forest.png'; // Ejemplo de imagen del mundo\r\nimport '../styles/progressTree.css';\r\n\r\nconst ProgressTree = ({ habit }) => {\r\n    const getTreeImage = () => {\r\n        const progress = habit.progress || 0;\r\n\r\n        if (progress < 25) {\r\n            return seed;\r\n        } else if (progress < 50) {\r\n            return sapling;\r\n        } else if (progress < 75) {\r\n            return youngTree;\r\n        } else {\r\n            return tree;\r\n        }\r\n    };\r\n\r\n    const getWorldImage = () => {\r\n        switch (habit.world) {\r\n            case 'forest':\r\n                return forest;\r\n            case 'city':\r\n                return city; // Ejemplo\r\n            case 'ocean':\r\n                return ocean; // Ejemplo\r\n            default:\r\n                return forest;\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"progress-tree\">\r\n            <img src={getWorldImage()} alt=\"Habit World\" className=\"world-image\" />\r\n            <img src={getTreeImage()} alt=\"Tree Progress\" className=\"tree-image\" />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProgressTree;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,6BAA6B;AAC9C,OAAOC,OAAO,MAAM,gCAAgC;AACpD,OAAOC,SAAS,MAAM,mCAAmC;AACzD,OAAOC,IAAI,MAAM,6BAA6B;AAC9C,OAAOC,MAAM,MAAM,+BAA+B,CAAC,CAAC;AACpD,OAAO,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAM,CAAC,KAAK;EAChC,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACvB,MAAMC,QAAQ,GAAGF,KAAK,CAACE,QAAQ,IAAI,CAAC;IAEpC,IAAIA,QAAQ,GAAG,EAAE,EAAE;MACf,OAAOV,IAAI;IACf,CAAC,MAAM,IAAIU,QAAQ,GAAG,EAAE,EAAE;MACtB,OAAOT,OAAO;IAClB,CAAC,MAAM,IAAIS,QAAQ,GAAG,EAAE,EAAE;MACtB,OAAOR,SAAS;IACpB,CAAC,MAAM;MACH,OAAOC,IAAI;IACf;EACJ,CAAC;EAED,MAAMQ,aAAa,GAAGA,CAAA,KAAM;IACxB,QAAQH,KAAK,CAACI,KAAK;MACf,KAAK,QAAQ;QACT,OAAOR,MAAM;MACjB,KAAK,MAAM;QACP,OAAOS,IAAI;MAAE;MACjB,KAAK,OAAO;QACR,OAAOC,KAAK;MAAE;MAClB;QACI,OAAOV,MAAM;IACrB;EACJ,CAAC;EAED,oBACIE,OAAA;IAAKS,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAC1BV,OAAA;MAAKW,GAAG,EAAEN,aAAa,CAAC,CAAE;MAACO,GAAG,EAAC,aAAa;MAACH,SAAS,EAAC;IAAa;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACvEhB,OAAA;MAAKW,GAAG,EAAER,YAAY,CAAC,CAAE;MAACS,GAAG,EAAC,eAAe;MAACH,SAAS,EAAC;IAAY;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtE,CAAC;AAEd,CAAC;AAACC,EAAA,GAlCIhB,YAAY;AAoClB,eAAeA,YAAY;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}